 private readonly JWT _jwt;
 public async Task<JwtSecurityToken> Generatetoken(users user)
        {
            var Userclaims = await _user.GetClaimsAsync(user); //get user claims
            var Userroles = await _user.GetRolesAsync(user); //get user rols
            var Roleclaims = new List<Claim>();
            foreach (var item in Userroles)
            {
                Roleclaims.Add(new Claim("roles", item));
            }
            var claims = new[]
            {
                 new Claim(JwtRegisteredClaimNames.Sub,user.UserName),
                 new Claim(JwtRegisteredClaimNames.Jti, Guid.NewGuid().ToString()), //New ID for each claim
                 new Claim(JwtRegisteredClaimNames.Email, user.Email),
                 new Claim("uid", user.Id)
            }.Union(Userclaims).Union(Roleclaims);
            var symmetrickey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(_jwt.Key));
            var signingcredentials = new SigningCredentials(symmetrickey, SecurityAlgorithms.HmacSha256);
            var jwtSecurityToken = new JwtSecurityToken(
             issuer: _jwt.Issuer,
             audience: _jwt.Audience,
             claims: claims,
             expires: DateTime.Now.AddDays(_jwt.DurationInDay),
             signingCredentials: signingcredentials);
            return jwtSecurityToken;
        }



                    migrationBuilder.InsertData(
table: "Country",
columns:new[] { "Country_Id", "Country_Name" },
values:new object[] { 100,"Egypt" }
);
            migrationBuilder.InsertData(
table: "Country",
columns: new[] { "Country_Id", "Country_Name" },
values: new object[] { 101, "Turkey" }
);



            migrationBuilder.InsertData(
table: "City",
columns: new[] { "Country_Id", "City_Name" },
values: new object[] { 2, "Cairo" }
);
            migrationBuilder.InsertData(
            table: "City",
            columns: new[] { "Country_Id", "City_Name" },
            values: new object[] { 2, "Alexandria" }
            );
            migrationBuilder.InsertData(
            table: "City",
            columns: new[] { "Country_Id", "City_Name" },
            values: new object[] { 3, "Istanbaul" }
            );
        }